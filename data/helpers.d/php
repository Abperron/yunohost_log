#!/bin/bash

# Create a dedicated php-fpm config
#
# usage: ynh_add_fpm_config [--phpversion=7.X] [--dedicated_service]
# | arg: -v, --phpversion - Version of php to use.
# | arg: -d, --dedicated_service - Use a dedicated php-fpm service instead of the common one.
#
# Requires YunoHost version 2.7.2 or higher.
ynh_add_fpm_config () {
	# Declare an array to define the options of this helper.
	local legacy_args=vd
	declare -Ar args_array=( [v]=phpversion= [d]=dedicated_service )
	local phpversion
	local dedicated_service
	# Manage arguments with getopts
	ynh_handle_getopts_args "$@"

	# Configure PHP-FPM 7.0 by default
	phpversion="${phpversion:-7.0}"

	# Do not use a dedicated service by default
	dedicated_service=${dedicated_service:-0}

	if [ $dedicated_service -eq 1 ]
	then
		local fpm_service="php${phpversion}-fpm-$app"
		local fpm_config_dir="/etc/php/$phpversion/dedicated-fpm"
		local old_fpm_config_dir="/etc/php/$phpversion/fpm"
	else
		local fpm_service="php${phpversion}-fpm"
		local fpm_config_dir="/etc/php/$phpversion/fpm"
	fi
	# Configure PHP-FPM 5 on Debian Jessie
	if [ "$(ynh_get_debian_release)" == "jessie" ]; then
		fpm_config_dir="/etc/php5/fpm"
		fpm_service="php5-fpm"
	fi

	# Create the directory for fpm pools
	mkdir -p "$fpm_config_dir/pool.d"

	ynh_app_setting_set --app=$app --key=fpm_config_dir --value="$fpm_config_dir"
	ynh_app_setting_set --app=$app --key=fpm_service --value="$fpm_service"
	ynh_app_setting_set --app=$app --key=fpm_dedicated_service --value="$dedicated_service"
	finalphpconf="$fpm_config_dir/pool.d/$app.conf"

	# Migrate from mutual php service to dedicated one.
	if [ $dedicated_service -eq 1 ]
	then
		# If a config file exist in the common pool, move it.
		if [ -e "$old_fpm_config_dir/pool.d/$app.conf" ]
		then
			ynh_print_info --message="Migrate to a dedicated php-fpm service for $app."
			# Create a backup of the old file before migration
			ynh_backup_if_checksum_is_different --file="$old_fpm_config_dir/pool.d/$app.conf"
			# Remove the old php config file
			ynh_secure_remove --file="$old_fpm_config_dir/pool.d/$app.conf"
			# Reload php to release the socket and allow the dedicated service to use it
			ynh_systemd_action --service_name=php${phpversion}-fpm --action=reload
		fi
	fi

	ynh_backup_if_checksum_is_different --file="$finalphpconf"

	cp ../conf/php-fpm.conf "$finalphpconf"
	ynh_replace_string --match_string="__NAMETOCHANGE__" --replace_string="$app" --target_file="$finalphpconf"
	ynh_replace_string --match_string="__FINALPATH__" --replace_string="$final_path" --target_file="$finalphpconf"
	ynh_replace_string --match_string="__USER__" --replace_string="$app" --target_file="$finalphpconf"
	ynh_replace_string --match_string="__PHPVERSION__" --replace_string="$phpversion" --target_file="$finalphpconf"
	chown root: "$finalphpconf"
	ynh_store_file_checksum --file="$finalphpconf"

	if [ -e "../conf/php-fpm.ini" ]
	then
		echo "Packagers ! Please do not use a separate php ini file, merge your directives in the pool file instead." >&2
		finalphpini="$fpm_config_dir/conf.d/20-$app.ini"
		ynh_backup_if_checksum_is_different "$finalphpini"
		cp ../conf/php-fpm.ini "$finalphpini"
		chown root: "$finalphpini"
		ynh_store_file_checksum "$finalphpini"
	fi

	if [ $dedicated_service -eq 1 ]
	then
		# Create a config for a dedicated php-fpm service for the app
		echo "[Unit]
Description=PHP $phpversion FastCGI Process Manager for $app
After=network.target

[Service] 
Type=notify
PIDFile=/run/php/php${phpversion}-fpm-$app.pid
ExecStart=/usr/sbin/php-fpm${phpversion} --nodaemonize --fpm-config $finalphpconf --pid /run/php/php${phpversion}-fpm-$app.pid
ExecReload=/bin/kill -USR2 \$MAINPID

[Install]
WantedBy=multi-user.target
" > ../conf/$fpm_service

		# Create this dedicated php-fpm service
		ynh_add_systemd_config --service=$fpm_service --template=$fpm_service
		# Restart the service, as this service is either stopped or only for this app
		ynh_systemd_action --service_name=$fpm_service --action=restart
	else
		# Reload php, to not impact other parts of the system using php
		ynh_systemd_action --service_name=$fpm_service --action=reload
	fi
}

# Remove the dedicated php-fpm config
#
# usage: ynh_remove_fpm_config
#
# Requires YunoHost version 2.7.2 or higher.
ynh_remove_fpm_config () {
	local fpm_config_dir=$(ynh_app_setting_get --app=$app --key=fpm_config_dir)
	local fpm_service=$(ynh_app_setting_get --app=$app --key=fpm_service)
	local dedicated_service=$(ynh_app_setting_get --app=$app --key=fpm_dedicated_service)
	dedicated_service=${dedicated_service:-0}
	# Assume php version 7.0 if not set
	if [ -z "$fpm_config_dir" ]; then
		fpm_config_dir="/etc/php/7.0/fpm"
		fpm_service="php7.0-fpm"
	fi

	if [ $dedicated_service -eq 1 ]
	then
		# Remove the dedicated service php-fpm service for the app
		ynh_remove_systemd_config --service=$fpm_service
	fi

	ynh_secure_remove --file="$fpm_config_dir/pool.d/$app.conf"
	ynh_secure_remove --file="$fpm_config_dir/conf.d/20-$app.ini" 2>&1
}
